{% include 'header.twig' %}

<div
        class="min-h-screen flex flex-col items-center justify-center bg-gray-100"
>
    <div
            class="
          flex flex-col
          bg-white
          shadow-md
          px-4
          sm:px-6
          md:px-8
          lg:px-10
          py-8
          rounded-3xl
          w-80
          max-w-md
        "
    >
        <div class="font-medium self-center text-xl sm:text-3xl text-gray-800">
            Log in
        </div>
        <div class="mt-4 self-center text-xl sm:text-sm text-gray-800">
            Fill out the form to log in
        </div>

        <div class="mt-4 self-center text-xl sm:text-sm text-gray-800">
            <span id="message" class="w-max text-center text-xs text-green-500">{{ args.msg }}</span>
        </div>

        <div class="mt-5">
            <form action="/authenticate" method="post" id="login" name="login">

                <div class="flex flex-col mb-5">
                    <label
                            for="email"
                            class="mb-1 text-xs tracking-wide text-gray-600"
                    >Email Address:</label
                    >
                    <div class="relative">
                        <div
                                class="
                    inline-flex
                    items-center
                    justify-center
                    absolute
                    left-0
                    top-0
                    h-full
                    w-10
                    text-gray-400
                  "
                        >
                        </div>

                        <input
                                id="email"
                                type="email"
                                name="email"
                                required="required"
                                class="
                    text-sm
                    placeholder-gray-500
                    pl-10
                    pr-4
                    rounded-2xl
                    border border-gray-400
                    w-full
                    py-2
                    focus:outline-none focus:border-blue-400
                  "
                                placeholder="Enter your email"
                        />
                        <span id="emailError" class="mb-4 w-max text-xs text-red-500"></span>
                    </div>
                </div>

                <div class="flex flex-col mb-6">
                    <label
                            for="password"
                            class="mb-1 text-xs sm:text-sm tracking-wide text-gray-600"
                    >Password:</label
                    >
                    <div class="relative">
                        <div
                                class="
                    inline-flex
                    items-center
                    justify-center
                    absolute
                    left-0
                    top-0
                    h-full
                    w-10
                    text-gray-400
                  "
                        >

                        </div>

                        <input
                                id="password"
                                type="password"
                                name="password"
                                required="required"
                                class="
                    text-sm
                    placeholder-gray-500
                    pl-10
                    pr-4
                    rounded-2xl
                    border border-gray-400
                    w-full
                    py-2
                    focus:outline-none focus:border-blue-400
                  "
                                placeholder="Enter your password"
                        />
                        <span id="passwordError" class="mb-4 w-max text-xs text-red-500"></span>
                    </div>
                </div>

                <div class="flex w-full">
                    <button
                            type="submit"
                            class="
                  flex
                  mt-2
                  items-center
                  justify-center
                  focus:outline-none
                  text-white text-sm
                  sm:text-base
                  bg-blue-500
                  hover:bg-blue-600
                  rounded-2xl
                  py-2
                  w-full
                  transition
                  duration-150
                  ease-in
                "
                    >
                        <span class="mr-2 uppercase">Log in</span>
                        <span>
                  <svg
                          class="h-6 w-6"
                          fill="none"
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          viewBox="0 0 24 24"
                          stroke="currentColor"
                  >
                    <path
                            d="M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z"
                    />
                  </svg>
                </span>
                    </button>
                </div>
            </form>
        </div>
    </div>
    <div class="flex justify-center items-center mt-6">
        <a
                href="/register"
                target="_blank"
                class="
            inline-flex
            items-center
            text-gray-700
            font-medium
            text-xs text-center
          "
        >
          <span class="ml-2"
          >Not registered?
            <a
                    href="/register"
                    class="text-xs ml-2 text-blue-500 font-semibold"
            >Register here</a
            ></span
          >
        </a>
    </div>
</div>
<script>

    const form = document.getElementById('login');
    //form.addEventListener('submit', handleFormSubmit);
    function handleFormSubmit(event) {
        event.preventDefault();

        let emailError = document.getElementById('emailError');
        emailError.innerHTML = "";
        let passwordError = document.getElementById('passwordError');
        passwordError.innerHTML = "";
        let message = document.getElementById('message');
        message.innerHTML = "";

        const data = new FormData(event.target);

        const value = Object.fromEntries(data.entries());

        const response = postData('/register', JSON.stringify(value));

        response.then((result) => {
            if (result.status === true) {
                //form.reset();
                //message.innerHTML = "";
                window.location.replace(result.redirect_uri);
            } else {
                message.classList.remove('text-green-500');
                message.classList.add('text-red-500');
                message.innerHTML = "User was not created! Error occurred.";
                document.getElementById('password').value = '';
                document.getElementById('confirm_password').value = '';
                if (result.alerts.email) {
                    emailError.innerHTML = result.alerts.email;
                    document.getElementById('email').value = '';
                }
                if (result.alerts.first_name) {
                    firstNameError.innerHTML = result.alerts.first_name;
                    document.getElementById('first_name').value = '';
                }
                if (result.alerts.last_name) {
                    lastNameError.innerHTML = result.alerts.last_name;
                    document.getElementById('last_name').value = '';
                }
                if (result.alerts.confirm_email) {
                    confirmEmailError.innerHTML = result.alerts.confirm_email;
                    document.getElementById('confirm_email').value = '';
                }
                if (result.alerts.password) {
                    passwordError.innerHTML = result.alerts.password;
                }
                if (result.alerts.confirm_password) {
                    confirmPasswordError.innerHTML = result.alerts.confirm_password;
                }
            }
        });
    }
    async function postData(url = '', data) {
        const response = await fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body: data
        });
        return response.json();
    }

</script>
{% include 'footer.twig' %}