{% include 'header.twig' %}

<nav id="header" class="w-full fixed z-30 py-1 bg-white shadow-lg border-b border-blue-400">
    <div class="w-full flex items-center justify-between mt-0 px-6 py-2">
            <nav>
                <ul class="md:flex items-center justify-between text-base text-blue-600 pt-4 md:pt-0">
                    <li><a class="inline-block no-underline hover:text-black font-medium text-lg py-2 px-4 lg:-ml-2" href="/login">Log in</a></li>
                    <li {% if args.user %} hidden="hidden" {% endif %}>
                        <a class="inline-block no-underline hover:text-black font-medium text-lg py-2 px-4 lg:-ml-2" href="/register">Register</a>
                    </li>
                    <li>
                        <a class="inline-block no-underline hover:text-black font-medium text-lg py-2 px-4 lg:-ml-2" href="/logout">
                            {% if args.user %} Log out {% endif %}
                        </a>
                    </li>
                    <li>
                        <span class="inline-block no-underline hover:text-black text-green-700 font-medium text-lg py-2 px-4 lg:-ml-2">
                           Welcome, {% if args.user %} {{args.user.firstname }}! {% else %} Guest! Log in to make a purchase {% endif %}
                        </span>
                    </li>
                </ul>
            </nav>

        <div class="order-2 md:order-3 flex flex-wrap items-center justify-end mr-0 md:mr-4" id="nav-content">
            <div class="auth flex items-center w-full md:w-full">
                <a href="/cart">
                <button id="goToCart" name="{{ args.cartCount }}"
                        class="bg-blue-400 text-white  p-2 rounded border border-gray-300 mr-4 hover:bg-gray-100 hover:text-gray-700">
                    Go to Cart
                </button>
                </a>
                <span>Items in your cart: <span id="quantity">{{ args.cartCount }}</span></span>
            </div>
        </div>
    </div>
</nav>
<br><br>
<div class="grid mt-20 mx-10 grid-cols-1 gap-4 lg:grid-cols-3 sm:grid-cols-2 ">
    {% for product in products %}
    <div class="w-full px-4 lg:px-0">
        <div class="p-3 bg-white rounded shadow-md">
            <div class="">
                <div class="flex-auto p-2 justify-evenly">
                    <div class="flex flex-wrap ">
                        <div class="flex items-center justify-between w-full min-w-0 ">
                            <h2 class="mr-auto text-lg cursor-pointer hover:text-gray-900 ">
                                <a href="/card/{{ product.id }}">
                                {{ product.name }}
                                </a>
                            </h2>
                            <span class="text-left">Category: {{ product.category }}</span>
                        </div>
                    </div>
                    <div class="mt-1 text-sm">
                        {{ product.manufacturer }}
                    </div>
                    <div class="mt-1 text-lg font-semibold">
                        {{ product.price }}
                    </div>



                    <div class="mt-1">
                        <button id="{{ product.id }}" onclick="addToCart(this, 'quantity{{ product.id }}')"
                                class="bg-blue-400 text-white text-sm p-1 rounded border border-gray-300 mr-3 hover:bg-gray-100 hover:text-gray-700">
                            Add to Cart</button>
                    </div>
                    <input type="hidden" id="user_id" value="{{ args.user.id }}" name="user_id">
                </div>
            </div>
        </div>
    </div>
    {% endfor %}
</div>

<script>

    const goToCart = document.getElementById('goToCart');
    if (parseInt(goToCart.name) === 0) {
        goToCart.hidden = true;
    }

    function addToCart(elem, id) {

        const itemQuantity = JSON.stringify({'quantity': document.getElementById(id).value});
        const response = cartAddProduct("cart/" + elem.id, itemQuantity);
        response.then((result) => {
            if (result.status === true) {
                document.getElementById('quantity').innerHTML = result.quantity;
                //window.location.replace(result.redirect_uri);
            } else
                message.innerHTML = "User was not deleted! Error occurred.";
        });

    }
    async function cartAddProduct(url = '', data) {
        const response = await fetch(url, {
            method: 'post',
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body: data
        });
        return response.json();
    }
</script>

{% include 'footer.twig' %}